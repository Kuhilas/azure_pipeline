{
	"name": "NotebookKunnat",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "group1sparkpool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "fb59e17a-a5a2-4297-b849-049d81e2fdb5"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/23b183d5-a30f-46b8-b418-ad060fb67787/resourceGroups/group1-week7/providers/Microsoft.Synapse/workspaces/group1-synapse/bigDataPools/group1sparkpool",
				"name": "group1sparkpool",
				"type": "Spark",
				"endpoint": "https://group1-synapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/group1sparkpool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.4",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"print(\"moo\")"
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"source": [
					"# Asenna tarvittava kirjasto (jos ei ole vielä asennettu)\n",
					"#%pip install pandas openpyxl\n",
					"\n",
					"import pandas as pd\n",
					"\n",
					"# ADLS Gen2 -tiedoston polku\n",
					"file_path = \"abfss://kunnat@group1adls.dfs.core.windows.net/kunnat_2024.xlsx\"\n",
					"\n",
					"# Lue Excel-tiedosto, ohitetaan ensimmäinen rivi ja käytetään toista riviä otsikkona\n",
					"df = pd.read_excel(file_path, engine=\"openpyxl\", skiprows=1)\n",
					"\n",
					"# Näytetään DataFrame\n",
					"print(df.head())\n",
					"\n",
					"print(df.columns)\n",
					""
				],
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"source": [
					"# Määritellään sarakkeet, jotka halutaan säilyttää merkkijonoina\n",
					"string_columns = ['Kunnan numero', 'Maakunnan koodi', 'Hyvinvointialueen koodi', \n",
					"                  'Seutukuntakoodi', 'Suuralue koodi', 'Kuntaryhmä koodi', \n",
					"                  'Kielisuhde koodi']\n",
					"\n",
					"# Pakotetaan halutut sarakkeet merkkijonoiksi ja täytetään nollilla tarvittaessa\n",
					"df[string_columns] = df[string_columns].astype(str).apply(lambda x: x.str.zfill(x.str.len().max()))"
				],
				"execution_count": 11
			},
			{
				"cell_type": "code",
				"source": [
					"selected_columns = [\n",
					"    'Kunnan numero', 'Kunta', 'Maakunnan koodi', 'Maakunta', \n",
					"    'Hyvinvointialueen koodi', 'Hyvinvointialue', 'Seutukuntakoodi', \n",
					"    'Seutukunta', 'Suuralue koodi', 'Suuralue', 'Kuntaryhmä koodi', \n",
					"    'Kuntaryhmä', 'Kielisuhde koodi', 'Kielisuhde'\n",
					"]\n",
					"\n",
					"df_selected = df[selected_columns]\n",
					"\n",
					"# Näytetään DataFrame\n",
					"print(df_selected.head())\n",
					"\n",
					"# Näytetään valittujen sarakkeiden nimet\n",
					"print(df_selected.columns)"
				],
				"execution_count": 12
			},
			{
				"cell_type": "code",
				"source": [
					"output_file_path = \"abfss://kunnat@group1adls.dfs.core.windows.net/kunnat_2024_muokattu.csv\"\n",
					"\n",
					"# Poistetaan ylimääräiset välilyönnit myös data-sarakkeista\n",
					"df_selected = df_selected.applymap(lambda x: x.strip() if isinstance(x, str) else x)\n",
					"\n",
					"# Tallenna CSV-tiedostoon\n",
					"df_selected.to_csv(output_file_path, index=False, sep=';')\n",
					"\n",
					"# Vahvistetaan, että tiedosto on tallennettu\n",
					"print(f\"Tiedosto on tallennettu: {output_file_path}\")"
				],
				"execution_count": 15
			}
		]
	}
}